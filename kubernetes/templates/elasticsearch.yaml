apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: elasticsearch-statefulset
spec:
  serviceName: elasticsearch-service
  replicas: 1
  minReadySeconds: 30
  selector:
    matchLabels:
      app: elasticsearch
  template:
    metadata:
      labels:
        app: elasticsearch
    spec:
      initContainers:
        - name: mkdir
          image: busybox:1.28
          command: [ 'mkdir', '-p', '/usr/share/elasticsearch/data/nodes/' ]
          securityContext:
            runAsUser: 0
          volumeMounts:
            - name: elasticsearch-volume
              mountPath: /usr/share/elasticsearch/data
        - name: chown
          image: busybox:1.28
          command: [ 'chown', '-R', '1000:root', '/usr/share/elasticsearch/' ]
          securityContext:
            runAsUser: 0
          volumeMounts:
            - name: elasticsearch-volume
              mountPath: /usr/share/elasticsearch/data
      containers:
        - name: elasticsearch-container
          image: docker.elastic.co/elasticsearch/elasticsearch:7.9.3
          ports:
            - containerPort: 9200
              name: http
          volumeMounts:
            - name: elasticsearch-volume
              mountPath: /usr/share/elasticsearch/data
          env:
            - name: discovery.type
              value: "single-node"
            - name: xpack.security.enabled
              value: "false"
          readinessProbe:
            httpGet:
              path: /
              port: 9200
            initialDelaySeconds: 15
            periodSeconds: 5
            failureThreshold: 15
          livenessProbe:
            httpGet:
              path: /
              port: 9200
            initialDelaySeconds: 15
            periodSeconds: 5
            failureThreshold: 15
  volumeClaimTemplates:
    - metadata:
        name: elasticsearch-volume
      spec:
        storageClassName: elasticsearch-volume-class
        accessModes: [ "ReadWriteMany" ]
        resources:
          requests:
            storage: 1Gi
---
kind: PersistentVolume
apiVersion: v1
metadata:
  name: elasticsearch-volume
spec:
  storageClassName: elasticsearch-volume-class
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteMany
  hostPath:
    path: "/mnt/bettingplatform/elasticsearch"
---
apiVersion: v1
kind: Service
metadata:
  name: elasticsearch-service
  labels:
    app: elasticsearch
spec:
  type: NodePort
  selector:
    app: elasticsearch
  ports:
    - protocol: TCP
      port: 9200
      targetPort: 9200
      name: web