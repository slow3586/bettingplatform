name: betting_platform

x-logging: &logging
  driver: gelf
  options:
    gelf-address: "udp://host.docker.internal:12201"

x-healthcheck: &healthcheck
  interval: 5s
  timeout: 5s
  retries: 30
  start_period: 5s

x-spring-env: &spring-env
  KAFKA_BROKERS: kafka-broker-1:9092,kafka-broker-2:9092,kafka-broker-3:9092
  management.zipkin.tracing.endpoint: http://zipkin:9411/api/v2/spans
  JAVA_OPTS: -Xms64M -Xmx512M
  server.tomcat.threads.max: 500

x-kafka-env: &kafka-env
  KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
  KAFKA_ZOOKEEPER_CONNECT: kafka-zookeeper:2181
  KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
  KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
  KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 100
  KAFKA_NUM_PARTITIONS: 12
  KAFKA_DEFAULT_REPLICATION_FACTOR: 3
  KAFKA_HEAP_OPTS: -Xms64M -Xmx512M

services:
  user-service:
    build: ./userservice
    #logging: *logging
    depends_on:
      kafdrop:
        condition: service_healthy
      user-service-db:
        condition: service_healthy
    environment:
      <<: *spring-env
      spring.datasource.url: 'jdbc:postgresql://user-service-db:5432/postgres'
    ports:
      - "8082:8080"
    healthcheck:
      test: "wget --no-verbose --tries=1 --spider 127.0.0.1:8080/actuator/health || exit 1"
      <<: *healthcheck

  user-service-1:
    build: ./userservice
    #logging: *logging
    depends_on:
      kafdrop:
        condition: service_healthy
      user-service-db:
        condition: service_healthy
    environment:
      <<: *spring-env
      spring.datasource.url: 'jdbc:postgresql://user-service-db:5432/postgres'
    ports:
      - "8092:8080"
    healthcheck:
      test: "wget --no-verbose --tries=1 --spider 127.0.0.1:8080/actuator/health || exit 1"
      <<: *healthcheck

  user-service-db:
    image: postgres:alpine
    #logging: *logging
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - ./userservice/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5434:5432"
    command: >
      postgres 
      -c ssl=off
      -c wal_level=logical
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d postgres" ]
      <<: *healthcheck

  kafka-zookeeper:
    image: confluentinc/cp-zookeeper:7.4.4
    #logging: *logging
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    healthcheck:
      test: "nc -z 127.0.0.1 2181 || exit 1"
      <<: *healthcheck

  kafka-broker-1:
    image: confluentinc/cp-kafka:7.4.4
    #logging: *logging
    depends_on:
      kafka-zookeeper:
        condition: service_healthy
    ports:
      - "9091:9091"
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-broker-1:9091,PLAINTEXT_HOST://kafka-broker-1:9092
      <<: *kafka-env
    healthcheck:
      test: "nc -z 127.0.0.1 9092 || exit 1"
      <<: *healthcheck

  kafka-broker-2:
    image: confluentinc/cp-kafka:7.4.4
    #logging: *logging
    depends_on:
      kafka-zookeeper:
        condition: service_healthy
    expose:
      - "9091"
      - "9092"
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-broker-2:9091,PLAINTEXT_HOST://kafka-broker-2:9092
      <<: *kafka-env
    healthcheck:
      test: "nc -z 127.0.0.1 9092 || exit 1"
      <<: *healthcheck

  kafka-broker-3:
    image: confluentinc/cp-kafka:7.4.4
    #logging: *logging
    depends_on:
      kafka-zookeeper:
        condition: service_healthy
    expose:
      - "9091"
      - "9092"
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-broker-3:9091,PLAINTEXT_HOST://kafka-broker-3:9092
      <<: *kafka-env
    healthcheck:
      test: "nc -z 127.0.0.1 9092 || exit 1"
      <<: *healthcheck

  kafka-init:
    image: confluentinc/cp-kafka:7.4.4
    depends_on:
      kafka-broker-1:
        condition: service_healthy
      kafka-broker-2:
        condition: service_healthy
      kafka-broker-3:
        condition: service_healthy
    entrypoint: [ "/bin/sh", "-c" ]
    command: |
      "
      set -x
      sleep 1
      kafka-topics --bootstrap-server kafka-broker-1:9092 --create --topic logs --replication-factor 3 --partitions 12
      kafka-topics --bootstrap-server kafka-broker-1:9092 --create --topic trace --replication-factor 3 --partitions 12
      kafka-topics --bootstrap-server kafka-broker-1:9092 --create --topic metric --replication-factor 3 --partitions 12
      kafka-topics --bootstrap-server kafka-broker-1:9092 --create --topic bet --replication-factor 3 --partitions 12
      kafka-topics --bootstrap-server kafka-broker-1:9092 --create --topic game --replication-factor 3 --partitions 12
      kafka-topics --bootstrap-server kafka-broker-1:9092 --create --topic price --replication-factor 3 --partitions 12
      kafka-topics --bootstrap-server kafka-broker-1:9092 --create --topic chat_post --replication-factor 3 --partitions 12
      sleep 1
      "

  kafdrop:
    image: obsidiandynamics/kafdrop:4.0.1
    #logging: *logging
    restart: always
    depends_on:
      kafka-init:
        condition: service_completed_successfully
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka-broker-1:9092,kafka-broker-2:9092,kafka-broker-3:9092"
      SCHEMAREGISTRY_CONNECT: "http://kafka-schema-registry:8085"
    healthcheck:
      test: "curl --location --output /dev/null --head --silent --fail 127.0.0.1:9000 || exit 1"
      <<: *healthcheck

  prometheus:
    image: prom/prometheus:v2.53.0
    logging: *logging
    restart: always
    volumes:
      - ./prometheus.yaml:/etc/prometheus/prometheus.yml
    ports:
      - "9089:9090"
    healthcheck:
      test: "wget --no-verbose --tries=1 --spider 127.0.0.1:9090 || exit 1"
      <<: *healthcheck

  grafana:
    image: grafana/grafana:10.4.4
    logging: *logging
    restart: always
    ports:
      - "3000:3000"
    healthcheck:
      test: "curl --location --output /dev/null --head --silent --fail 127.0.0.1:3000 || exit 1"
      <<: *healthcheck